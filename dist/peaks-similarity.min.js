!function(t,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):"object"==typeof exports?exports.peaksSimilarity=r():t.peaksSimilarity=r()}(this,function(){return function(t){function r(a){if(n[a])return n[a].exports;var i=n[a]={exports:{},id:a,loaded:!1};return t[a].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}var n={};return r.m=t,r.c=n,r.p="",r(0)}([function(t,r){"use strict";function n(t,r,n){var a=[],i=0;n/=2;for(var e=0,o=0;o<t.length;o++){for(;i<r.length&&t[o][0]>r[i][0]+n;)i++;i<r.length&&t[o][0]>r[i][0]-n&&(a[e++]=t[o])}return a}function a(t,r){var n,a,i,e,o=t[0][0],f=t[0][1],u=t[1][0],s=t[1][1],h=r[0][0],c=r[0][1],d=r[1][0],v=r[1][1];n=u-o,a=s-f,i=d-h,e=v-c;var l,m;return l=(-a*(o-h)+n*(f-c))/(-i*a+n*e),m=(i*(f-c)-e*(o-h))/(-i*a+n*e),l>=0&&1>=l&&m>=0&&1>=m?{x:o+m*n,y:f+m*a}:null}function i(t){for(var r=0,n=Number.MAX_VALUE,a=Number.MIN_VALUE,i=0;i<t.length;i++)r+=t[i][1],t[i][1]<n&&(n=t[i][1]),t[i][1]>a&&(a=t[i][1]);if(0!=r)for(var i=0;i<t.length;i++)t[i][1]/=r;return{sum:r,min:n,max:a}}function e(t,r,a,e,f){if(!Array.isArray(t)||!Array.isArray(r))return{info:void 0,data:void 0};var u=o(t,e,f),s=o(r,e,f),h=n(u,s,a),c=n(s,u,a),d=i(h),v=i(c);return{info1:d,info2:v,data1:h,data2:c}}function o(t,r,n){for(var a=[],i=0,e=0;e<t.length;e++)(!r||t[e][0]>=r)&&(!n||t[e][0]<=n)&&(a[i++]=[t[e][0],t[e][1]]);return a}function f(t,r,n){if(!Array.isArray(t))return{info:void 0,data:void 0};var a=o(t,r,n),e=i(a);return{info:e,data:a}}function u(t){for(var r=0,n=0;n<t.length;n++)r+=Math.abs(t[n][1]);return 1-r}t.exports=function(t){function r(r){t=r||{},B=t.common||B||!1,void 0==t.widthBottom&&(t.widthBottom=M||2),void 0==t.widthTop&&(t.widthTop=A||1),v(t.widthBottom,t.widthTop),l(t.from||b,t.to||w)}function i(t){if(j=y(t),B){var r=e(j,S,M,b,w);E=r.data1,N=r.info1,T=r.data2,k=r.info2}else{var n=f(j,b,w);E=n.data,N=n.info}}function o(t){if(S=y(t),B){var r=e(j,S,M,b,w);E=r.data1,N=r.info1,T=r.data2,k=r.info2}else{var n=f(S,b,w);T=n.data,k=n.info}}function s(){return E}function h(){return T}function c(){return N}function d(){return k}function v(t,r){if(A=r,M=t,I=(M-A)/2,A>M)throw"widthBottom has to be larger than widthTop"}function l(t,r){if(t!==b||r!==w)if(b=t,w=r,B){var n=e(j,S,M,b,w);E=n.data1,N=n.info1,T=n.data2,k=n.info2}else{var a=f(j,b,w);E=a.data,N=a.info;var a=f(S,b,w);T=a.data,k=a.info}}function m(t,r,n,a){if(0===r||0===a)return 0;var i=2*Math.abs(t-n);if(i>M)return 0;if(A>=i)return Math.min(r,a);var e=Math.max(r,a)*(M-i)/(M-A);return Math.min(r,a,e)}function p(t,r,n,i){var e=2/(A+M);if(0===r||0===i)return 0;if(t===n)return Math.min(r,i);var o=Math.abs(t-n);if(o>=M)return 0;if(r===i)return A>=o?((A+M)/2-o)*r*e:M>=o?(M-o)*r/2*(o-A)/(M-A)*e:0;var f=Math.min(r,i),u=Math.max(r,i),s=[[[0,0],[I,f]],[[I,f],[I+A,f]],[[A+I,f],[M,0]]];if(t>n&&r>i||n>t&&i>r)var h=[[o,0],[o+I,u]];else var h=[[o+I,u],[o,0]];for(var c=0;3>c;c++){var d=a(s[c],h);if(d)switch(c){case 0:return f-o*d.y/2*e;case 1:return(I*f/(2*u)*f+(A+I-d.x)*f+I*f/2)*e;case 2:return(M-o)*d.y/2*e}}return NaN}function x(){for(var r=[],n=0;n<T.length;n++)r.push([T[n][0],T[n][1]]);for(var a=[],n=0;n<E.length;n++)a.push([E[n][0],E[n][1]]);for(var i=0,e=0,o=0;i<a.length;){var f=a[i][0]-T[e][0];if(Math.abs(f)<M){if(t.trapezoid)var u=p(a[i][0],a[i][1],r[e][0],r[e][1],A,M);else var u=m(a[i][0],a[i][1],r[e][0],r[e][1],A,M);a[i][1]-=u,r[e][1]-=u,e<T.length-1?e++:(i++,e=o)}else f>0&&e<T.length-1?(e++,o=e):(i++,e=o)}return r}function y(t){if(Array.isArray(t)&&Array.isArray(t[0])&&2===t[0].length)return t;for(var r=t[0],n=t[1],a=[],i=0;i<r.length;i++)a.push([r[i],n[i]]);return a}function g(t,r){t&&i(t),r&&o(r);var n={};return n.diff=x(),n.extract1=s(),n.extract2=h(),n.extractInfo1=c(),n.extractInfo2=d(),n.similarity=u(n.diff),n}var A,M,b,w,E,T,I,N,k,B;r(t);var j=[],S=[];this.setPeaks1=i,this.setPeaks2=o,this.getExtract1=s,this.getExtract2=h,this.getExtractInfo1=c,this.getExtractInfo2=d,this.setFromTo=l,this.setOptions=r,this.setTrapezoid=v,this.getSimilarity=g,this.getCommonArray=n}}])});
//# sourceMappingURL=peaks-similarity.min.js.map